services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:17.0
    container_name: rostob_postgres
    environment:
      POSTGRES_DB: rostob_publicaciones_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/bookstore_init.sql:/docker-entrypoint-initdb.d/rostob_init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - rostob_network

  # Backend API (Node.js)
  backend:
    build: ./backend
    container_name: rostob_backend
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: rostob_publicaciones_db
      DB_USER: postgres
      DB_PASSWORD: postgres123
      JWT_SECRET: your_jwt_secret_key_here
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - rostob_network

  # Frontend Angular
  frontend:
    build: ./frontend
    container_name: rostob_frontend
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: ng serve --host 0.0.0.0 --port 4200
    networks:
      - rostob_network

# Definiciones globales
volumes:
  postgres_data:

networks:
  rostob_network:
    driver: bridge